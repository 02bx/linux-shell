  # my.cnf
  cat > /etc/my.cnf << EOF
[client]
port = 3306
socket = /tmp/mysql.sock
default-character-set = utf8mb4  #防止插入表情时出错
[mysql]
prompt="MySQL [\\d]> "  #\d	默认数据库名字，尚未选定数据库，则是(null)  提示作用
no-auto-rehash  #不自动补全   
[mysqld]
port = 3306
socket = /tmp/mysql.sock
basedir = ${mysql_install_dir}
datadir = ${mysql_data_dir}
pid-file = ${mysql_data_dir}/mysql.pid
user = mysql
bind-address = 0.0.0.0
server-id = 1
init-connect = 'SET NAMES utf8mb4' #设定字符集
character-set-server = utf8mb4  #服务器字符集
skip-name-resolve  #不反解  禁用DNS解析
#skip-networking
back_log = 300# back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。也就是说，如果MySql的连接数达到max_connections时，新来的请求将会被存在堆栈中，以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log，将不被授予连接资源。back_log值不能超过TCP/IP连接的侦听队列的大小。若超过则无效，查看当前系统的TCP/IP连接的侦听队列的大小命令：cat /proc/sys/net/ipv4/tcp_max_syn_backlog，目前系统为1024。对于Linux系统推荐设置为大于512的整数。
max_connections = 1000  #MySQL服务器的连接数  “Too many connections” !!!!!性能参数  500-2000 都可以
max_connect_errors = 6000# 默认100 建议大点解决ERROR 1129 (00000): Host 'xxx' is blocked because of many connection errors. Unblock with 'mysqladmin flush-hosts'这个错误的方法比较多，不过有些方案都是临时方案。
open_files_limit = 65535#w文件描述符
table_open_cache = 128
max_allowed_packet = 500M  #值设置过小将导致单个记录超过限制后写入数据库失败，且后续记录写入也将失败，为了数据完整性，需要考虑到事务因素。
binlog_cache_size = 1M  #sync_binlog=0 时二进制日志写进内存缓存 这个值有用  一个事务，在没有提交（uncommitted）的时候，产生的日志，记录到Cache中；等到事务提交（committed）需要提交的时候，则把日志持久化到磁盘。 
max_heap_table_size = 8M
tmp_table_size = 16M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
sort_buffer_size = 8M #为每个需要进行排序的线程分配该大小的一个缓冲区。
影响：增加这值加速ORDER BY或GROUP BY操作。不过该参数对应的分配内存是每连接独占的，如果有100个连接，那么实际分配的总共排序缓冲区大小为100×sort_buffer_size。
join_buffer_size = 8M  #联合查询操作所能使用的缓冲区大小 当然，如果应用中的排序都比较大。内存充足却并发量不是特别大的时候，也可以继续增大sort buffer size的设置。
#最后需要注意的是，每一个线程都会创建自己独立的buffer而不是整个系统共享，所以设置的值过大会造成系统内存不足
key_buffer_size = 4M
thread_cache_size = 8 #快速重用而缓存的线程数 不立即释放资源 放到缓存区 有新的请求就直接用
#query_cache_type = 1 #表示这个mysql版本是否支持查询缓存。时表示关闭，1时表示打开，2表示只要select 中明确指定SQL_CACHE才缓存。
#这个参数的设置有点奇怪，1、如果事先查询缓存是关闭的然而用 set @@global.query_cache_type=1; 会报错
#ERROR 1651 (HY000): Query cache is disabled; restart the server with query_cache_type=1 to enable it
#如果事先是打开着的尝试去闭关它，那么这个关闭也是不完全的，这种情况下查询还是会去尝试查找缓存。
#最好的关闭查询缓存的办法就是把my.cnf 中的query_cache_type=0然后再重启mysql。
#query_cache_size = 8M #用于查询缓存的内存大小。
#query_cache_limit = 2M#表示单个结果集所被允许缓存的最大值。
开了有个大问题 就是大并发的情况 Waiting for query cache lock；全局锁  效率是硬伤。

ft_min_word_len = 4
log_bin = mysql-bin
binlog_format = mixed
sync_binlog = 1#安全用1  性能用0  当事务提交后，Mysql仅仅是将binlog_cache中的数据写入Binlog文件，但不执行fsync之类的磁盘 同步指令通知文件系统将缓存刷新到磁盘，而让Filesystem自行决定什么时候来做同步，这个是性能最好的。
expire_logs_days = 7#二进制日志过期的天数 默认是0  0-99  建议7-14
log_error = ${mysql_data_dir}/mysql-error.log
slow_query_log = 1
long_query_time = 1
slow_query_log_file = ${mysql_data_dir}/mysql-slow.log
performance_schema = 0
explicit_defaults_for_timestamp
#lower_case_table_names = 1
skip-external-locking
default_storage_engine = InnoDB
innodb_file_per_table = 1
innodb_open_files = 500
innodb_buffer_pool_size = 64M
innodb_write_io_threads = 4
innodb_read_io_threads = 4
innodb_thread_concurrency = 0
innodb_purge_threads = 1
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 2M
innodb_log_file_size = 32M
innodb_log_files_in_group = 3
innodb_max_dirty_pages_pct = 90
innodb_lock_wait_timeout = 120
bulk_insert_buffer_size = 8M
myisam_sort_buffer_size = 8M
myisam_max_sort_file_size = 10G
myisam_repair_threads = 1
interactive_timeout = 28800
wait_timeout = 28800
[mysqldump]
quick
max_allowed_packet = 500M #please check if this file is opended in another program  当shutdown时修改还报这个就改了。
#[myisamchk]
#一般都是innodb 不用myisamchk修补
#key_buffer_size = 8M
#sort_buffer_size = 8M
#read_buffer = 4M
#write_buffer = 4M
EOF
