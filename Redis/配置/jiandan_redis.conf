# 默认情况下，redis不是在后台模式运行的，如果需要在后台进程运行，把该项的值更改为yes，默认为no 
**daemonize no** 
daemonize yes

#redis服务以后台进程运行的时候，Redis默认会把pid写入/var/run/redis.pid文件组
pidfile /var/run/redis.pid 

# 指定redis监听端口，默认为6379
port 6379 

# 指定redis只接收来自于该IP地址的请求，如果不进行设置，默认将处理所有请求，我们是在生产环境下，所以这是必备项
bind 10.160.29.5

# 设置客户端连接时的超时时间，单位为秒。当客户端在这段时间内没有发出任何指令，那么关闭该连接 
timeout 2

# 指定日志记录级别 
# Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose 
# debug  记录很多信息，用于开发和测试 
# varbose 很多精简的有用信息，不像debug会记录那么多 
# notice 普通的verbose，常用于生产环境 
# warning 只有非常重要或者严重的信息会记录到日志 
loglevel verbose 

# 可用数据库数，默认值为16，默认数据库存储在DB 0号ID库中，无特殊需求，建议仅设置一个数据库 databases 1 
databases 16

# 把数据库存到磁盘上: 
#   下面的例子将会进行把数据写入磁盘的操作: 
#   900秒(15分钟)之后，且至少有1个key(次)变更 
#   300秒(5分钟)之后，且至少有10个key(次)变更 
#   60秒之后，且至少有10000个key(次)变更 
#   注意：如果不需要写磁盘，则把所有 "save" 设置注释掉，即实现全内存服务器。 
save 900 1 
save 300 10 
save 60 10000

# 数据库的文件名及存放路径 
dbfilename rdbfile.rdb

# 工作目录 
# 本地数据库会写到这个目录下，文件名就是上面的 "dbfilename" 的值。 
dir /usr/local/rdbfile

# 主从同步。通过 slaveof 配置来实现Redis实例的备份。
# 当本机为从服务时，设置主服务的IP及端口，在Redis启动时，它会自动从主服务进行数据同步 
slaveof 

#当本机为从服务时，设置主服务的连接密码 
# masterauth 
# 当一个slave失去和master的连接，或者同步正在进行中，slave的行为有两种可能： 
# 1) 如果 slave-serve-stale-data 设置为 "yes" (默认值)，slave会继续响应客户端请求，可能是正常数据，也可能是还没获得值的空数据。
# 2) 如果 slave-serve-stale-data 设置为 "no"，slave会回复"正在从master同步(SYNC with master in progress)"来处理各种请求，除了 INFO 和 SLAVEOF 命令。
slave-serve-stale-data yes 

# slave根据指定的时间间隔向服务器发送ping请求。 
# 时间间隔可以通过 repl_ping_slave_period 来设置。 
# 默认10秒 
repl-ping-slave-period 5

# 设置最大同时连接客户端数量，0表示没有限制，一旦达到这个限制，Redis会关闭所有新连接并发送错误达到最大用户数上限。
maxclients 1024

# 设置最大内存，达到最大内存设置后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理后，任到达最大内存设置，将无法再进行写入操作。 
maxmemory 10240000000分配10G内存 
# 内存策略：如果达到内存限制了，Redis如何删除key。你可以在下面五个策略里面选： 
# volatile-lru -> 根据LRU算法生成的过期时间来删除。 
# allkeys-lru -> 根据LRU算法删除任何key。 
# volatile-random -> 根据过期设置来随机删除key。 
# allkeys->random -> 无差别随机删。 
# volatile-ttl -> 根据最近过期时间来删除(辅以TTL) 
# noeviction -> 谁也不删，直接在写操作时返回错误。 
maxmemory-policy noeviction

# 开启累加模式,因为redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中，这种情况下，当Redis宕机的时候，最新的数据就丢了。
#如果不希望丢掉任何一条数据的话就该用纯累加模式：一旦开启这个模式，Redis会把每次写入的数据在接收后都写入 appendonly.aof 文件。 
appendonly yes

# 设置纯累加文件名字及保存路径，默认："appendonly.aof" 
appendfilename appendonly.aof 

# Redis慢查询日志可以记录超过指定时间的查询。运行时间不包括各种I/O时间。 
slowlog-log-slower-than 10000
